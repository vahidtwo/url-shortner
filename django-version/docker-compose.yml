version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - backend
    #    volumes:
    #      - db_data:/var/lib/mysql
    ports:
      - "${DB_PORT}:3306"
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=root --execute \"SHOW DATABASES;\""
      interval: 30s
      retries: 3
      start_period: 5s
      timeout: 30s

  nginx:
    image: nginx:latest
    volumes:
      - static_volume:/static
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - web

  #  vault:
  #    image: vault:1.13.1
  #    container_name: vault
  #    restart: unless-stopped
  #    environment:
  #      VAULT_ADDR='http://0.0.0.0:8200':
  #      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_DEV_ROOT_TOKEN_ID}
  #    cap_add:
  #      - IPC_LOCK
  #    ports:
  #      - "8200:8200"
  #    networks:
  #      - backend
  #    #    volumes:
  #    #      - vault_data:/vault/logs
  #    command: server -dev -dev-root-token-id=${VAULT_DEV_ROOT_TOKEN_ID}

  web-migration:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_web_migration
    environment:
      ENTRYPOINT: "migration"
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${DB_PORT}/${MYSQL_DATABASE}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      DB_HOST: db
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy


  web:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_web
    environment:
      DB_HOST: db
      ENTRYPOINT: "web"
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${DB_PORT}/${MYSQL_DATABASE}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
    #    volumes:
    #      - .:/app
    networks:
      - backend
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
      - web-migration

  redis:
    image: redis:6.2
    container_name: redis_cache
    restart: unless-stopped
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

networks:
  backend:

volumes:
  db_data:
  redis_data:
  static_volume:
#  vault_data:
